{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","addButton","event","good","currentTarget","parentElement","classList","toggle","setState","removeButton","clearButton","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,UAAY,SAACC,EAA4CC,GAAiB,IAAD,IAGvE,UAFeD,EAAME,cAEdC,qBAAP,mBAAsBA,qBAAtB,SAAqCC,UAClCC,OAAO,gCAEV,EAAKC,SAAS,CAAER,aAAcG,KAXlC,EAcEM,aAAe,SAACP,GAAgD,IAAD,IAG7D,UAFeA,EAAME,cAEdC,qBAAP,mBAAsBA,qBAAtB,SAAqCC,UAClCC,OAAO,gCAEV,EAAKC,SAAS,CAAER,aAAc,MApBlC,EAuBEU,YAAc,WACZ,EAAKF,SAAS,CAAER,aAAc,MAxBlC,4CA2BE,WAAU,IAAD,OACCA,EAAiBW,KAAKZ,MAAtBC,aAER,OACE,uBAAMY,UAAU,oBAAhB,UACGZ,EACC,mCACE,qBAAIY,UAAU,sCAAd,oBACMZ,EADN,gBAIE,wBACE,UAAQ,cACRa,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKD,mBAKlB,oBAAIE,UAAU,QAAd,+BAEJ,uBAAOA,UAAU,QAAjB,SACE,gCACGf,EAAMkB,KAAI,SAAAZ,GAAI,OACb,qBAEE,UAAQ,OACRS,UAAWI,IAAW,CACpB,+BAAgChB,IAAiBG,IAJrD,UAOE,6BACGH,IAAiBG,EAEd,wBACE,UAAQ,eACRU,KAAK,SACLD,UAAU,iBACVE,QAAS,SAACZ,GACR,EAAKO,aAAaP,IALtB,eAYA,wBACE,UAAQ,YACRW,KAAK,SACLD,UAAU,SACVE,QAAS,SAACZ,GACR,EAAKD,UAAUC,EAAOC,IAL1B,iBAcN,oBAAI,UAAQ,YAAYS,UAAU,eAAlC,SACGT,MApCEA,iBArDrB,GAAyBc,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.61f30229.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  addButton = (event: React.MouseEvent<HTMLButtonElement>, good:string) => {\n    const target = event.currentTarget;\n\n    target.parentElement?.parentElement?.classList\n      .toggle('has-background-success-light');\n\n    this.setState({ selectedGood: good });\n  };\n\n  removeButton = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const target = event.currentTarget;\n\n    target.parentElement?.parentElement?.classList\n      .toggle('has-background-success-light');\n\n    this.setState({ selectedGood: '' });\n  };\n\n  clearButton = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood ? (\n          <>\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.clearButton}\n              />\n            </h1>\n          </>\n        )\n          : <h1 className=\"title\">No goods selected</h1>}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr\n                key={good}\n                data-cy=\"Good\"\n                className={classNames({\n                  'has-background-success-light': selectedGood === good,\n                })}\n              >\n                <td>\n                  {selectedGood === good\n                    ? (\n                      <button\n                        data-cy=\"RemoveButton\"\n                        type=\"button\"\n                        className=\"button is-info\"\n                        onClick={(event) => {\n                          this.removeButton(event);\n                        }}\n                      >\n                        -\n                      </button>\n                    )\n                    : (\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={(event) => {\n                          this.addButton(event, good);\n                        }}\n                      >\n                        +\n                      </button>\n                    )}\n\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}